name: Continuous Integration
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
  build:
    env:
      SLACK_CHANNEL: devops
      SLACK_COLOR: '#3278BD'
      SLACK_ICON: https://github.com/rtCamp.png?size=48
      SLACK_USERNAME: JoelSlackBot
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    name: Build and test
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code
    - name: Build and test C#
      run: dotnet restore && dotnet build && dotnet test
    - name: Build and test npm
      run: npm i && npm run build && npm t && npm run lint
      working-directory: DotnetTemplate.Web
    # - name: Slack on cancel
    #   uses: rtCamp/action-slack-notify@master
    #   if: ${{ cancelled() }}
    #   env:
    #     SLACK_MESSAGE: Cancelled
    #     SLACK_TITLE: Joel CI Cancelled
    # - name: Slack on fail
    #   uses: rtCamp/action-slack-notify@master
    #   if: ${{ failure() }}
    #   env:
    #     SLACK_MESSAGE: Failure
    #     SLACK_TITLE: Joel CI Failed
    # - name: Slack on success
    #   uses: rtCamp/action-slack-notify@master
    #   if: ${{ success() }}
    #   env:
    #     SLACK_MESSAGE: Success
    #     SLACK_TITLE: Joel CI Success
  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@master # Adds a step to checkout the repository code
    - name: Publish to Docker Hub
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: j0elwee/dotnettemplate
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        snapshot: true
        default_branch: main
  publish_to_heroku:
    # needs: build
    name: Publish to heroku
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: dotnettemplat
          heroku_email: joel.wee@softwire.com
          usedocker: true
          healthcheck: https://dotnettemplat.herokuapp.com/health
          checkstring: Healthy
          delay: 5
          rollbackonhealthcheckfailed: true
